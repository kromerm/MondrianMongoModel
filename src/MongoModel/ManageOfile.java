/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package MongoModel;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListModel;

/**
 *
 * @author mkromer
 */
public class ManageOfile extends javax.swing.JFrame {

    ConfigurationManager config;
    String ofile;
    DefaultListModel data;

    /**
     * Creates new form ManageOfile
     */
    public ManageOfile() {
        initComponents();
    
        try {
            config = new ConfigurationManager ("MongoModel.xml");
        } catch (IOException e)
        {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this,e.getMessage(), "Warning", JOptionPane.WARNING_MESSAGE);                     
        }
        
        String olap4j = (String)JOptionPane.showInputDialog(null, "Enter the path location of olap4j.properties", "olap4j.properties", JOptionPane.QUESTION_MESSAGE,null,null,config.getProperty("olap4j"));
        
        // Save that new config
        try {
            config.setProperty("olap4j", olap4j);
            config.save();
        } catch (Exception e) {}
        
        // Make sure it has the proper file separator
        ofile = olap4j.toString()+File.separator+"olap4j.properties";        
        data = new DefaultListModel();
        int i=0;
        
        try {
            BufferedReader br = new BufferedReader(new FileReader(ofile));
            String line=new String();
            while ((line = br.readLine()) != null) {
                if (line.contains("=")) {
                    try {                        
                        String ns[]=line.split("\\.");                         
                        if (!data.contains(ns[0])) data.add(i++, ns[0]);
                    } catch (Exception e) {}
                }
            }
            br.close();            
        } catch (Exception e)
        {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this,e.getMessage(), "Warning", JOptionPane.WARNING_MESSAGE);                     
            //return;
        }
        
        jList1.setModel(data);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Manage OFile");
        setName("manageofile"); // NOI18N

        jScrollPane1.setViewportView(jList1);

        jButton1.setText("Delete");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Close");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Custom");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        ArrayList<String> values = new ArrayList<String> (jList1.getSelectedValuesList());
        String newfile = new String ("olap4j.properties");
        
        // Clean-up the olap4j.properties connections file
        try {
            BufferedReader br = new BufferedReader(new FileReader(ofile));
            PrintWriter out = new PrintWriter(newfile);
            String line=new String();
            while ((line = br.readLine()) != null) {                
                
                // Get out if it's an empty line
                if (line.length() < 2) continue;
                
                // if there are comments, just copy them
                if (line.charAt(0) == '#') { out.println(line); continue; }
                
                // if there are no "."'s then print & continue
                if (!line.contains(".")) { out.println(line); continue; }
                
                // else, split on name
                String [] value = line.split("\\.");
                
                // get out of town is there are no strings in value
                if (value.length < 1) continue;
                if (!values.contains(value[0])) out.println(line);                        
            }               
            br.close();            
            out.close();
        } catch (Exception e)
        {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this,e.getMessage(), "Delete model", JOptionPane.WARNING_MESSAGE);                     
        }

        
        String outs= "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" +
        "<beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n" +
        "       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd\"\n" +
        "       default-lazy-init=\"true\">\n" +
        "  <bean id=\"olap4jConnectionList\" class=\"org.pentaho.platform.util.beans.PropertyListFactoryBean\">\n" +
        "    <property name=\"location\" value=\"olap4j.properties\"/>\n" +
        "  </bean>\n" +
        "  <bean id=\"olap4jConnectionRemoveList\" class=\"java.util.ArrayList\">\n" +
        "    <constructor-arg>\n" +
        "      <list>\n" +
        "        <!--uncomment the value below and change the text to remove existing olap4j connections-->\n";
        
        for (String value:values)
        {
            outs+="        <value>"+value+"</value>\n";
        }
        
        outs += "      </list>\n" +
        "    </constructor-arg>\n" +
        "  </bean>\n" +
        "</beans>";
        
        String ffile = "olap4j.spring.xml";
        try {
            PrintWriter out = new PrintWriter(ffile);
            out.println(outs);
            out.close();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }

        JOptionPane.showMessageDialog(this,"I have put 2 files in the current directory. In order to remove this connection\nyou will need to move these 2 files (olap4j.properties and olap4j.spring.xml)\nto your Pentaho system directory and restart the Pentaho server.", "Delete From Server", JOptionPane.INFORMATION_MESSAGE);                     
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String custom = (String)JOptionPane.showInputDialog(null, "Enter the schema name to remove", "Remove Models", JOptionPane.QUESTION_MESSAGE);
        data.addElement(custom);
        jList1.setModel(data);        
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageOfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageOfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageOfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageOfile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageOfile().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
